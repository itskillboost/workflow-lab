name: Build and Deploy Spring Boot to AWS EC2
on:
  push:
    branches: [ main ]

env:
  PROJECT_NAME: cicdproject
  BUCKET_NAME: cide-codedeploy-4878
  CODE_DEPLOY_APP_NAME: cicdapp
  DEPLOYMENT_GROUP_NAME: cicdapp_deploy
  AWS_REGION: ap-northeast-2

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set Up Java JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Ensure Gradle Wrapper Exists
        run: |
          if [ ! -f "./gradlew" ]; then
            echo "⚠️ gradlew 파일이 없습니다. Gradle Wrapper를 다운로드합니다."
            wget https://services.gradle.org/distributions/gradle-7.6.1-bin.zip
            unzip gradle-7.6.1-bin.zip
            mkdir -p gradle/wrapper
            wget https://services.gradle.org/distributions/gradle-7.6.1-bin.zip -O gradle/wrapper/gradle-wrapper.jar
            chmod +x gradlew
          fi

      - name: Grant Execute Permission for Gradle Wrapper
        run: chmod +x ./gradlew  # gradlew 실행 권한 부여

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      - name: Package Application as Zip
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/
          zip -r deploy/$GITHUB_SHA.zip deploy/

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload to S3
        run: |
          aws s3 cp deploy/$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Deploy with AWS CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name $CODE_DEPLOY_APP_NAME \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name $DEPLOYMENT_GROUP_NAME \
            --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
